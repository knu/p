#!/bin/sh
#
# p(1) - a lazy wrapper for $PAGER
#
# Copyright (c) 2012 Akinori MUSHA
#
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

VERSION="0.2.0"

[ -t 1 -a -n "$PAGER" ] || exec /bin/cat

if [ -n "${IN_LAZY_PAGER+1}" ]; then
    echo "$0: recursive invocation detected." >&2
    exit 255
fi

IN_LAZY_PAGER=1; export IN_LAZY_PAGER

argc="$#"

set -- ${PAGER} "$@"
case "$1" in
    *\=*) set env "$@" ;;
esac

[ -t 0 -o $argc -gt 0 ] && exec "$@"

case "$*" in
    less|*/less)
	exec "$@" -F ;;
esac

lines=

# ts: tab stop
# nl: number of physycal lines
# dh: display height
# dw: display width
ts=8; nl=0; dh=$((`tput lines`-2)); dw=$((`tput cols`))
while [ $nl -le $dh ]; do
    IFS='
'
    read -r line || exec printf %s "$lines"
    lines="$lines$line
"
    nl=$((nl+1))

    # w: line width
    # t: number of consecutive tabs
    w=0; t=$((2+${#line}+1))
    IFS='	'
    for a in .	$line.
    do
        if [ $w -gt 0 ]; then
            w=$((w+ts-w%ts))
            t=$((t-1))
        fi
        w=$((w+${#a}))
        t=$((t-${#a}))
    done
    w=$((w-8+t*ts-1))

    nl=$((nl+(w-1)/dw))
done

( printf %s "$lines"; exec /bin/cat ) | exec ${PAGER-more}
